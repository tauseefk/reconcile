{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/validate.js","./node_modules/uuid/dist/esm-browser/v1.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/observable-stream/dist/index.js","./client/utils.ts","./events.ts","./client/Types.ts","./client/reconcile.ts","./client/messenger.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Stream {\n    constructor(subscribe, unsubscribe) {\n        this.subscribe = subscribe;\n        this.unsubscribe = unsubscribe;\n    }\n    compose(operator) {\n        return operator(this);\n    }\n    map(fn) {\n        return this.compose(_map(fn));\n    }\n    filter(fn) {\n        return this.compose(_filter(fn));\n    }\n    debounceTime(ms) {\n        return this.compose(debounceTime(ms));\n    }\n    static fromEvent(type, target) {\n        const _streamFromEvent = new Stream((observer) => {\n            target.addEventListener(type, observer.next);\n            _streamFromEvent.unsubscribe = () => target.removeEventListener(type, observer.next);\n        });\n        return _streamFromEvent;\n    }\n}\nexports.default = Stream;\nfunction _map(fn) {\n    return (stream) => new Stream((observer) => {\n        stream.subscribe({\n            next: (data) => observer.next(fn(data)),\n            complete: observer.complete,\n        });\n    });\n}\nconst noOp = () => { };\nfunction _filter(fn) {\n    return (stream) => new Stream((observer) => {\n        stream.subscribe({\n            next: (data) => (fn(data) ? observer.next(data) : noOp()),\n            complete: observer.complete,\n        });\n    });\n}\nfunction debounceTime(ms) {\n    let _timer = null;\n    return (stream) => new Stream((observer) => {\n        stream.subscribe({\n            next: (data) => {\n                if (_timer) {\n                    clearTimeout(_timer);\n                    _timer = null;\n                }\n                _timer = window.setTimeout(() => observer.next(data), ms);\n            },\n            complete: () => {\n                if (_timer)\n                    window.clearTimeout(_timer);\n                observer.complete();\n            },\n        });\n    });\n}\n","'use strict';\n\nconst promisifiedRAF = (): Promise<number> =>\n  new Promise(requestAnimationFrame);\n\nconst delay =\n  (ms: number) =>\n  (res: any): Promise<any> =>\n    new Promise((resolve) => {\n      window.setTimeout(() => resolve(res), ms);\n    });\n\nconst debounce = (fn: Function, ms: number): Function => {\n  let timer: number;\n  return (...args: any[]): void => {\n    if (timer) clearTimeout(timer);\n    timer = window.setTimeout(fn.bind(null, ...args), ms);\n  };\n};\n\nconst getRandomColor = (): string =>\n  '#' + ((Math.random() * 16777215) << 0).toString(16);\n\nconst branchInto =\n  (a: Function, b: Function): Function =>\n  (condition: boolean): Function =>\n  (_: any) =>\n    condition ? Promise.resolve(a(_)) : Promise.resolve(b(_));\n\nconst keyIs =\n  (key: string): Function =>\n  (code: string): boolean =>\n    code === key;\n\nconst keyIsDisplayable = (code: string): boolean => code.length === 1;\n\nconst takeContinuousN = (n: number, ms: number = 300) => {\n  let _count: number = 0;\n  let _resetCountTimer: number | undefined;\n\n  return (): boolean => {\n    if (++_count >= n) {\n      _count = 0;\n      window.clearTimeout(_resetCountTimer);\n      return true;\n    }\n\n    if (_resetCountTimer) window.clearTimeout(_resetCountTimer);\n    _resetCountTimer = window.setTimeout(() => {\n      _count = 0;\n    }, ms);\n    return false;\n  };\n};\n\nconst noOp = () => {};\n\nexport {\n  promisifiedRAF,\n  delay,\n  debounce,\n  getRandomColor,\n  branchInto,\n  keyIs,\n  keyIsDisplayable,\n  takeContinuousN,\n  noOp,\n};\n","export const events = {\n  CONNECTION: 'connection',\n  DISCONNECT: 'disconnect',\n  INFO: 'info',\n  NEW_MESSAGE: 'newMessage',\n  TYPING: 'userTyping',\n  STOPPED_TYPING: 'userStoppedTyping',\n  USER_CONNECTED: 'userConnected',\n  USER_DISCONNETED: 'userDisconnected',\n  MESSAGE_ID: 'messageId',\n  EMPHASIZE_MESSAGE: 'emphasizeMessage',\n  INSERT: 'insert',\n  DELETE: 'delete',\n  undo: 'undo',\n  redo: 'redo',\n};\n","export enum OPERATIONTYPE {\n  Insert = 'insert',\n  Delete = 'delete',\n  Undo = 'undo',\n  Redo = 'redo',\n}\n\nexport enum AUTHORS {\n  ALICE = 'alice',\n  BOB = 'bob',\n}\n\nexport type Origin = {\n  [value in AUTHORS]: number;\n};\n\nexport interface IMutationData {\n  index: number;\n  length?: number;\n  text?: string;\n  type: OPERATIONTYPE;\n}\n\nexport interface IMutation {\n  author: AUTHORS;\n  conversationId: string;\n  data: IMutationData;\n  origin: Origin; // Should we just use origin to sort, or use timestamp as well?\n}\n","import { delay, promisifiedRAF } from './utils';\nimport {\n  AUTHORS,\n  IMutation,\n  IMutationData,\n  OPERATIONTYPE,\n  Origin,\n} from './Types';\n\nexport const ping = () => {};\nconst delayLong = delay(2000);\n\n// {\n//   \"author\": \"alice | bob\",\n//   \"conversationId\": \"string\",\n//   \"data\": {\n//     \"index\": \"number\",\n//     \"length\": \"number | undefined\",\n//     \"text\": \"string | undefined\",\n//     \"type\": \"insert | delete\"\n//   },\n//   \"origin\": {\n//     \"alice\": \"integer\",\n//     \"bob\": \"integer\"\n//   }\n// }\n\ninterface ISnapShot {\n  timestamp: Date;\n  content: string; // assume single string for now\n  mutations: IMutation[];\n}\n\nexport class Reconcile {\n  private mutationsQueue: IMutation[] = [];\n  private content: string = \"\";\n  private origin: Origin;\n  private author: AUTHORS;\n  private conversationId: string;\n  updateCallback: (content: string) => void;\n\n  constructor(author: AUTHORS, conversationId: string, updateCallback ?: (content: string) => void) {\n    this.author = author;\n    this.conversationId = conversationId;\n    this.updateCallback = updateCallback;\n    this.update();\n  }\n\n  enqueueMutation(data: IMutationData) {\n    this.mutationsQueue.push({\n      data,\n      author: this.author,\n      conversationId: this.conversationId,\n      origin: this.origin,\n    });\n  }\n\n  update() {\n    promisifiedRAF()\n      .then(this.applyMutation.bind(this))\n      .then(this.update.bind(this))\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  private applyMutation() {\n    if (this.mutationsQueue.length < 1) {\n      if (this.updateCallback) this.updateCallback(this.getDocumentState().content);\n      return;\n    }\n\n    const { data } = this.mutationsQueue[0];\n\n    switch (data.type) {\n      case OPERATIONTYPE.Insert:\n        this.applyInsertion();\n        break;\n      case OPERATIONTYPE.Delete:\n        this.applyDeletion();\n        break;\n      case OPERATIONTYPE.Undo:\n        break;\n      case OPERATIONTYPE.Redo:\n        break;\n    }\n  }\n\n  private applyInsertion() {\n    const { content } = this;\n    const { data } = this.mutationsQueue.shift();\n    const { index, text } = data;\n\n    let updatedContent =\n      content.substring(0, index) + text + content.substring(index);\n    this.content = updatedContent;\n  }\n\n  private applyDeletion() {\n    const { content } = this;\n    const { data } = this.mutationsQueue.shift();\n    const { index, length } = data;\n\n    let updatedContent =\n      content.substring(0, index) + content.substring(index + length);\n    this.content = updatedContent;\n  }\n\n  private createSnapshot() {}\n\n  // only send on initialize for each user\n  getDocumentState(): ISnapShot {\n    return {\n      timestamp: new Date(),\n      content: this.content,\n      mutations: this.mutationsQueue,\n    };\n  }\n}\n","'use strict';\n\nimport { v1 } from 'uuid';\nimport Stream from 'observable-stream';\nimport { delay, keyIs, keyIsDisplayable, getRandomColor, promisifiedRAF, noOp } from './utils';\nimport { events } from '../events';\n\nconst port = window.location.port ? ':' + window.location.port : '';\nconst host = `${window.location.hostname}${port}`;\nconst socket = io.connect(host);\nlet textInputEl: HTMLTextAreaElement = null;\nlet userId = null;\nlet titleEl = null;\nconst activeUsers = new Map();\nimport { Reconcile } from './reconcile';\nimport { AUTHORS, OPERATIONTYPE } from './Types';\n\nconst keyIsEnter = keyIs('Enter');\nlet ReconcileAPI: Reconcile = null;\n\nconst delayShort = delay(1000);\nconst delayLong = delay(2000);\nconst delayTiny = delay(250);\n\nsocket.on(events.INFO, ({ id, connectedUsers }) => {\n  userId = id;\n  connectedUsers\n    .filter((user) => user !== userId)\n    .forEach((user) => {\n      addToActiveUsers({ userId: user });\n    });\n});\n\ntype Connection = { userId: string };\nconst $userConnection = new Stream<Connection>((observer) => {\n  socket.on(events.USER_CONNECTED, observer.next);\n  socket.on(events.USER_CONNECTED, observer.complete);\n});\n\nconst $userDisconnection = new Stream<Connection>((observer) => {\n  socket.on(events.USER_DISCONNETED, observer.next);\n  socket.on(events.USER_DISCONNETED, observer.complete);\n});\n\ntype EditorInsert = { author: AUTHORS; text: string; index: number };\nconst $editorInsert = new Stream<EditorInsert>((observer) => {\n  socket.on(events.INSERT, observer.next);\n  socket.on(events.DISCONNECT, observer.complete);\n});\n\nconst $userTypingStart = new Stream((observer) => {\n  socket.on(events.TYPING, observer.next);\n  socket.on(events.TYPING, observer.complete);\n});\n\nconst $userTypingStop = new Stream((observer) => {\n  socket.on(events.STOPPED_TYPING, observer.next);\n  socket.on(events.STOPPED_TYPING, observer.complete);\n});\n\nconst $messageId = new Stream((observer) => {\n  socket.on(events.MESSAGE_ID, observer.next);\n});\n\n/**\n * Adds the message to the chat, and scrolls it into view.\n * Just DOM operations.\n * @param {object} { message, id }\n * @param {boolean} isOwn\n */\nconst enqueueInsert = ({ author, text, index }: EditorInsert) => {\n  if (text === undefined || text === null) return;\n\n  console.log(text, author, index);\n  ReconcileAPI.enqueueMutation({\n    index,\n    type: OPERATIONTYPE.Insert,\n    text,\n  });\n};\n\nconst emitTyping = () => {\n  socket.emit(events.TYPING, { userId });\n};\n\nconst emitInsertEvent = ({ index, type, text, id }) => {\n  socket.emit(events.INSERT, {\n    from: userId,\n    index,\n    type,\n    text,\n    id,\n  });\n};\n\nconst addToActiveUsers = ({ userId }) => {\n  if (activeUsers.has(userId)) return;\n\n  ReconcileAPI = new Reconcile(userId, v1(), (content: string) => {\n    textInputEl.textContent = content;\n  });\n\n  const userEl = document.createElement('span');\n  userEl.classList.add('user', 'u-float-right');\n  userEl.style.backgroundColor = getRandomColor();\n\n  activeUsers.set(userId, userEl);\n};\n\nconst removeFromActiveUsers = ({ userId }) => {\n  if (!activeUsers.has(userId)) return;\n\n  activeUsers.get(userId).remove();\n  activeUsers.delete(userId);\n};\n\nconst startTyping = ({ userId }) => {\n  if (!activeUsers.has(userId)) return;\n\n  activeUsers.get(userId).classList.add('typing');\n};\n\nconst stopTyping = ({ userId }) => {\n  if (!activeUsers.has(userId)) return;\n\n  activeUsers.get(userId).classList.remove('typing');\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  titleEl = document.getElementById('title');\n  textInputEl = document.getElementById('textInput') as HTMLTextAreaElement;\n\n  const $textInput = Stream.fromEvent(\n    'keydown',\n    textInputEl,\n  ) as Stream<KeyboardEvent>;\n\n  promisifiedRAF()\n    .then(delayLong)\n    .then(() => titleEl.classList.add('u-fade'));\n\n  textInputEl.focus();\n  textInputEl.select();\n\n  $userConnection.subscribe({\n    next: addToActiveUsers,\n    complete: noOp,\n  });\n\n  $userDisconnection.subscribe({\n    next: removeFromActiveUsers,\n    complete: noOp,\n  });\n\n  // insertion events\n  let startPos = null;\n  $textInput\n    .filter((e) => keyIsDisplayable(e.key))\n    .map((e) => {\n      // HACK: implement pipe on Stream and use that instead\n      if (startPos === null) {\n        // @ts-ignore\n        startPos = e.target.selectionStart;\n      }\n      return {\n        e,\n        id: v1(),\n      };\n    })\n    .debounceTime(300) // accumulate keystrokes until the user stops for 300ms; should probably throttle instead\n    .subscribe({\n      next: ({ id, e }) => {\n        e.preventDefault();\n\n        // @ts-ignore\n        let endPos = e.target.selectionEnd;\n        // @ts-ignore\n        const stringToInsert = e.target.value.substring(startPos, endPos);\n\n        ReconcileAPI.enqueueMutation({\n          index: startPos,\n          type: OPERATIONTYPE.Insert,\n          text: stringToInsert,\n        });\n\n        emitInsertEvent({\n          index: startPos,\n          type: OPERATIONTYPE.Insert,\n          text: stringToInsert,\n          id,\n        });\n\n        // CLEANUP\n        startPos = null;\n        endPos = null;\n      },\n      complete: noOp,\n    });\n\n  $textInput\n    .filter((e) => !keyIsEnter(e.code))\n    .subscribe({\n      next: emitTyping,\n      complete: noOp,\n    });\n\n  $editorInsert\n    .filter(({ author }) => author !== userId)\n    .subscribe({\n      next: enqueueInsert,\n      complete: noOp,\n    });\n\n  $userTypingStart.subscribe({\n    next: startTyping,\n    complete: noOp,\n  });\n\n  $userTypingStop.subscribe({\n    next: stopTyping,\n    complete: noOp,\n  });\n});\n"],"names":["$parcel$interopDefault","a","__esModule","default","$9cdf19e69c867c9613f8a5f54a7bcc18$var$getRandomValues","$9cdf19e69c867c9613f8a5f54a7bcc18$var$rnds8","Uint8Array","$9cdf19e69c867c9613f8a5f54a7bcc18$export$default","crypto","getRandomValues","bind","msCrypto","Error","$b268ae3034f6495bfc51b97df46e9f9d$export$default","uuid","$e7fd8a45fba05150bca17eaec76d3f37$export$default","test","$0ccf622f17bacc0947bc60ed76028ef8$var$_nodeId","$0ccf622f17bacc0947bc60ed76028ef8$var$_clockseq","$2ab850b7b58ac405e6af10d2ec717a53$var$byteToHex","$2ab850b7b58ac405e6af10d2ec717a53$var$i","push","toString","substr","$0ccf622f17bacc0947bc60ed76028ef8$var$_lastMSecs","$0ccf622f17bacc0947bc60ed76028ef8$var$_lastNSecs","$0ccf622f17bacc0947bc60ed76028ef8$export$default","options","buf","offset","i","b","Array","node","clockseq","undefined","seedBytes","random","rng","msecs","Date","now","nsecs","dt","tl","tmh","n","arr","arguments","length","toLowerCase","TypeError","Object","defineProperty","value","$9ebb1528925c550400235b9f7fac119a$var$Stream","constructor","subscribe","unsubscribe","this","compose","operator","map","fn","stream","observer","next","data","complete","$9ebb1528925c550400235b9f7fac119a$var$_map","filter","$9ebb1528925c550400235b9f7fac119a$var$noOp","$9ebb1528925c550400235b9f7fac119a$var$_filter","debounceTime","ms","_timer","clearTimeout","window","setTimeout","$9ebb1528925c550400235b9f7fac119a$var$debounceTime","type","target","_streamFromEvent","addEventListener","removeEventListener","$9ed30fb2cc237e57f4ead3adb1e4f6ac$export$promisifiedRAF","Promise","requestAnimationFrame","$9ed30fb2cc237e57f4ead3adb1e4f6ac$export$delay","res","resolve","$9ed30fb2cc237e57f4ead3adb1e4f6ac$export$noOp","$44743fe7bba9271ee62b9170efaf09f5$export$events","$b6264d05482dbe4ada3acf689b82e0e7$export$OPERATIONTYPE","OPERATIONTYPE","$b6264d05482dbe4ada3acf689b82e0e7$export$AUTHORS","AUTHORS","$905f76653d4008bb05e50a7a8fe24946$var$delayLong","$905f76653d4008bb05e50a7a8fe24946$export$Reconcile","mutationsQueue","content","author","conversationId","updateCallback","update","enqueueMutation","origin","then","applyMutation","catch","e","console","error","getDocumentState","Insert","applyInsertion","Delete","applyDeletion","Undo","Redo","shift","index","text","updatedContent","substring","createSnapshot","timestamp","mutations","$da5e51a02dea60081015c093ccbc4749$var$port","location","port","$da5e51a02dea60081015c093ccbc4749$var$host","hostname","$da5e51a02dea60081015c093ccbc4749$var$socket","io","connect","$da5e51a02dea60081015c093ccbc4749$var$textInputEl","$da5e51a02dea60081015c093ccbc4749$var$userId","$da5e51a02dea60081015c093ccbc4749$var$titleEl","$da5e51a02dea60081015c093ccbc4749$var$activeUsers","Map","$da5e51a02dea60081015c093ccbc4749$var$keyIsEnter","key","code","$da5e51a02dea60081015c093ccbc4749$var$ReconcileAPI","$da5e51a02dea60081015c093ccbc4749$var$delayShort","$da5e51a02dea60081015c093ccbc4749$var$delayLong","$da5e51a02dea60081015c093ccbc4749$var$delayTiny","on","id","connectedUsers","user","forEach","$da5e51a02dea60081015c093ccbc4749$var$addToActiveUsers","userId","$da5e51a02dea60081015c093ccbc4749$var$$userConnection","$da5e51a02dea60081015c093ccbc4749$var$$userDisconnection","$da5e51a02dea60081015c093ccbc4749$var$$editorInsert","$da5e51a02dea60081015c093ccbc4749$var$$userTypingStart","$da5e51a02dea60081015c093ccbc4749$var$$userTypingStop","$da5e51a02dea60081015c093ccbc4749$var$enqueueInsert","$da5e51a02dea60081015c093ccbc4749$var$$messageId","log","$da5e51a02dea60081015c093ccbc4749$var$emitTyping","emit","TYPING","has","textContent","userEl","document","createElement","classList","add","style","backgroundColor","Math","set","$da5e51a02dea60081015c093ccbc4749$var$removeFromActiveUsers","get","remove","delete","$da5e51a02dea60081015c093ccbc4749$var$startTyping","$da5e51a02dea60081015c093ccbc4749$var$stopTyping","getElementById","$textInput","fromEvent","focus","select","startPos","selectionStart","preventDefault","endPos","selectionEnd","stringToInsert","INSERT","from","$da5e51a02dea60081015c093ccbc4749$var$emitInsertEvent"],"version":3,"file":"index.HASH_REF_7b9c3643e4543d898105d9473fa9768e.js.map"}